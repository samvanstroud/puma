:py:mod:`puma.utils.generate`
=============================

.. py:module:: puma.utils.generate

.. autoapi-nested-parse::

   Dummy data generation for plotting.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   puma.utils.generate.get_dummy_multiclass_scores
   puma.utils.generate.get_dummy_2_taggers



.. py:function:: get_dummy_multiclass_scores(size: int = 9999, bjets_mean: float = 1.4, seed: int = 42)

   Generate dummy data representing output of 3 class classifier.
   Adapted to light-, c- and b-jets and values of `HadronConeExclTruthLabelID`.

   :param size: Size of dummy data. For each of the 3 classes, the same amount is produced,
                if size cannot be divided by 3, next smaller number is taken,
                by default 9_999
   :type size: int, optional
   :param bjets_mean: Mean value of the b-jets 3D gaussian, the more away from 0, the better the
                      b-tagging performance, by default 1.4
   :type bjets_mean: float, optional
   :param seed: Random seed for number generation, by default 42
   :type seed: int, optional

   :returns: * *np.ndarray* -- Output scores of the shape (size, 3)
             * *np.ndarray* -- Labels of shape (size,). The order of the output is light-jets, c-jets, b-jets


.. py:function:: get_dummy_2_taggers(size: int = 9999, shuffle: bool = True, seed: int = 42, add_pt: bool = False)

   Wrapper function of `get_dummy_multiclass_scores` to generate classifier output
   for 2 taggers, in this case rnnip and dips as well as HadronConeExclTruthLabelID.


   :param size: Size of dummy data, by default 9_999
   :type size: int, optional
   :param shuffle: If True shuffles the dummy data, by default True
   :type shuffle: bool, optional
   :param seed: Random seed for number generation (will count +10 for second tagger),
                by default 42
   :type seed: int, optional
   :param add_pt: Specify if pt column should be added as well, by default False
   :type add_pt: bool, optional

   :returns: **df_gen** -- Dataframe with columns
             [HadronConeExclTruthLabelID, rnnip_pu, rnnip_pc, rnnip_pb, dips_pu, dips_pc,
             dips_pb] if `add_pt` is True also pt is added
   :rtype: pandas.DataFrame


